# Generated by Django 4.2.23 on 2025-07-14 18:13

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number')])),
                ('bio', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='traveltribe_users', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='traveltribe_users_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('destination', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated total budget for the trip', max_digits=10, null=True)),
                ('group_size', models.PositiveIntegerField(blank=True, help_text='Expected number of participants', null=True)),
                ('currency', models.CharField(blank=True, help_text='Currency for the budget, e.g., USD', max_length=10, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', help_text='Current status of the trip', max_length=20)),
                ('cover_image_url', models.URLField(blank=True, help_text='URL of the cover image stored in Cloudinary', max_length=500, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last updated timestamp')),
                ('is_public', models.BooleanField(default=True, help_text='Whether the trip is public or private')),
                ('interests', models.CharField(blank=True, help_text='Comma-separated interests or tags', max_length=255)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_trips', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TripParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant', models.ForeignKey(db_column='participant_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.trip')),
            ],
            options={
                'db_table': 'api_trip_participant',
                'unique_together': {('trip', 'participant')},
            },
        ),
        migrations.AddField(
            model_name='trip',
            name='participants',
            field=models.ManyToManyField(blank=True, related_name='joined_trips', through='api.TripParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['destination', 'start_date'], name='api_trip_destina_19162d_idx'),
        ),
    ]
